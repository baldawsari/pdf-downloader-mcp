[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf-downloader-mcp"
version = "1.0.0"
description = "A robust MCP server for downloading PDF files with advanced retry logic and error handling"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "baldawsari", email = "55813250+baldawsari@users.noreply.github.com"}
]
keywords = ["mcp", "pdf", "downloader", "retry", "robust"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: System :: Archiving",
]

dependencies = [
    "mcp>=1.0.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "pydantic>=2.0.0",
    "click>=8.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]

[project.urls]
Homepage = "https://github.com/baldawsari/pdf-downloader-mcp"
Repository = "https://github.com/baldawsari/pdf-downloader-mcp"
Issues = "https://github.com/baldawsari/pdf-downloader-mcp/issues"

[project.scripts]
pdf-downloader-mcp = "pdf_downloader_mcp.__main__:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--strict-markers --strict-config"
markers = [
    "asyncio: marks tests as async",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
